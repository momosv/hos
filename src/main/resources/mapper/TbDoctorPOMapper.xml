<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.momosv.hos.dao.TbDoctorPOMapper" >
  <resultMap id="BaseResultMap" type="cn.momosv.hos.model.TbDoctorPO" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="dept_id" property="deptId" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="VARCHAR" />
    <result column="entry_time" property="entryTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="leave_time" property="leaveTime" jdbcType="TIMESTAMP" />
    <result column="is_leave" property="isLeave" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, account,work_code, passwd, position, user_id, dept_id, org_id, entry_time, create_time,
    update_time, leave_time, is_leave
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_doctor
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="getCaseApplyList" resultType="java.util.Map">
    select a.id as auth_id ,a.is_allow,a.allow_grade,a.create_time as apply_time,a.deadline,c.id as case_id,c.diagnosis,c.create_time as case_time,c.from_dept_name,c.from_org_name, u.name as user_name,
    d.`name` as case_doc_name
    from  tb_data_authority a
    join tb_case c on  a.case_id=c.id
    join tb_doctor d on c.doctor_id=d.id
    join tb_base_user u on a.user_id=u.id_card
    WHERE (a.doctor_id=#{tbDoctorVO.id}
      or (allow_grade=1 and a.apply_dept_id=#{tbDoctorVO.deptId})
      or (allow_grade=2 and a.apply_org_id=#{tbDoctorVO.orgId}))
    <if test="isAllow!=null">
      <if test='isAllow=="1"'>
        and is_allow=1
      </if>
      <if test='isAllow!="1"'>
        and is_allow!=1
      </if>
    </if>

    <if test="key!=null">
      <choose>
        <when test='keyType=="userName"'>
          and u.NAME like #{key}
        </when>
        <when test='keyType=="diagnosis"'>
          and c.diagnosis like #{key}
        </when>
      </choose>
    </if>
  </select>
  
  <select id="getUserCaseList" resultType="java.util.Map">
        select DISTINCT c.id,c.diagnosis,c.create_time,doc.name as doc_name,org.name as org_name,dept.name as dept_name,a.is_allow,a.allow_grade
     from tb_case c
    LEFT JOIN tb_doctor doc on doc.id=c.doctor_id
    LEFT JOIN tb_medical_org org on c.org_id=org.id
    LEFT JOIN  tb_department dept ON  c.dept_id=dept.id
     LEFT JOIN tb_data_authority a on c.id=a.case_id and (a.allow_grade=0 and a.doctor_id=#{tbDoctorVO.id}
    or (a.allow_grade=1 and a.apply_dept_id=#{tbDoctorVO.deptId})
    or (a.allow_grade=2 and a.apply_org_id=#{tbDoctorVO.orgId}))
     <where>
      patient_id in
    <foreach collection="pList" item="listItem"
             open="(" close=")" separator=",">
      #{listItem}
    </foreach>
     and c.doctor_id!=#{tbDoctorVO.id}
       <if test="diagnosis!=null">
         and c.diagnosis like #{diagnosis}
       </if>
     </where>
  </select>
</mapper>